apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-resolver
  labels:
    app: {{ .Release.Name }}-resolver
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}-resolver
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-resolver
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/hostname
                    operator: In
                    values:
                    - hh-rke-wp-webadmin-58-worker-{{.Values.resolver_worker_n}}.caas.ebi.ac.uk
      volumes:
        - name: {{ .Release.Name }}-import
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-import-pvc
        - name: {{ .Release.Name }}-resolver
          persistentVolumeClaim:
            claimName: worker-{{.Values.resolver_worker_n}}-local-pvc
      containers:
        - name: resolver
          image: ghcr.io/ebispot/grebi_resolver_service:{{.Values.imageTag}}
          volumeMounts:
            - mountPath: "/data_import"
              name: {{ .Release.Name }}-import
              readOnly: true
            - mountPath: "/data"
              name: {{ .Release.Name }}-resolver
          command: ["/bin/bash", "-c"]
          args: ["echo Synchronizing data... && rm -rf /data/rocksdb && rsync --mkpath -arv --delete /data_import/sqlite/ $GREBI_SQLITE_SEARCH_PATH/ && echo Done && java -jar /opt/target/grebi_resolver_service-1.0-SNAPSHOT-jar-with-dependencies.jar"]
          imagePullPolicy: Always
          resources:
            requests:
              memory: 16Gi
              cpu: 2
            limits:
              memory: 16Gi
              cpu: 2
          env:
            - name: GREBI_SQLITE_SEARCH_PATH
              value: /data/sqlite
          ports:
            - containerPort: 8080

